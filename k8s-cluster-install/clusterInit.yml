---
  - hosts: all
    become: yes
    tasks:

      - name: update and upgrade apt package
        apt: 
          upgrade: "yes"
          update_cache: "yes"
          cache_valid_time: "86400" 

      - name: create the 'student' user
        user: name=student state=present create_home=yes shell=/bin/bash group=admin 
      
      - name: allow 'student' to have passwordless sudo
        lineinfile:
          dest: /etc/sudoers
          line: 'student ALL=(ALL) NOPASSWD: ALL'
          validate: 'visudo -cf %s'

      - name: set up authorized keys for the student user
        authorized_key: user=student key="{{item}}"
        with_file:
          - ~/.ssh/id_rsa.pub

      - name: Create containerd config file
        file:
          path: "/etc/modules-load.d/containerd.conf"
          state: "touch"

      - name: Add conf for containerd
        blockinfile:
          path: "/etc/modules-load.d/containerd.conf"
          block: |
                overlay
                br_netfilter

      - name: modprobe
        shell: |
                sudo modprobe overlay
                sudo modprobe br_netfilter


      - name: Set system configurations for Kubernetes networking
        file:
          path: "/etc/sysctl.d/99-kubernetes-cri.conf"
          state: "touch"

      - name: Add conf for containerd
        blockinfile:
          path: "/etc/sysctl.d/99-kubernetes-cri.conf"
          block: |
                 net.bridge.bridge-nf-call-iptables = 1
                 net.ipv4.ip_forward = 1
                 net.bridge.bridge-nf-call-ip6tables = 1

      - name: Apply new settings
        command: sudo sysctl --system

      - name: install containerd
        shell: |
                sudo apt-get update && sudo apt-get install -y containerd
                sudo mkdir -p /etc/containerd
                sudo containerd config default | sudo tee /etc/containerd/config.toml
                sudo systemctl restart containerd

      - name: disable swap
        shell: |
                sudo swapoff -a
                sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab 

      - name: install APT Transport HTTPS
        apt:
          name: apt-transport-https
          state: present

      - name: add Kubernetes apt-key
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present

      - name: add Kubernetes' APT repository
        apt_repository:
          repo: deb http://apt.kubernetes.io/  kubernetes-xenial main
          state: present
          filename: 'kubernetes'


      - name: install kubelet
        apt:
          name: kubelet
          state: latest
          update_cache: true

      - name: install kubeadm
        apt:
          name: kubeadm
          state: latest


      - name: hold the software at the recent but stable version 
        shell: apt-mark hold kubelet kubeadm
        

  - hosts: masters
    become: yes
    tasks:

      - name: install kubectl
        apt:
          name: kubectl
          state: latest
          force: yes

      - name: hold the software at the recent but stable version 
        shell: apt-mark hold kubectl

      - name: Download Calico as a network plugin which will allow us to use Network Policies
        get_url:
          url: https://docs.projectcalico.org/manifests/calico.yaml
          dest: /home/student      
          owner: "student"
          mode: "0740" 

      - name: Delete previous configuration file if present.
        file:
          path:  $HOME/kubeadm-config.yaml
          state: absent

      - name: Create a configuration file for the cluster.
        file:
          path:  $HOME/kubeadm-config.yaml
          state: touch
          owner: root
          group: root
          mode: '0700'
       
      - name: Set the configuration file for the cluster.
        blockinfile:
          path:  $HOME/kubeadm-config.yaml
          marker: ""
          block: |
            apiVersion: kubeadm.k8s.io/v1beta3
            kind: ClusterConfiguration
            kubernetesVersion: 1.22.0
            networking:
              podSubnet: 192.168.0.0/16
          
      - name: Initialize the cluster
        shell: 
        args:
          cmd: kubeadm init --config=kubeadm-config.yaml 
          chdir: $HOME

      - name: create .kube directory
        become: yes
        become_user: student
        file:
          path: $HOME/.kube
          state: directory
          mode: '0700'

      - name: copy admin.conf to user's kube config
        become: yes
        become_user: root
        become_method: sudo
        copy:
          src: /etc/kubernetes/admin.conf
          dest: /home/student/.kube/config
          remote_src: yes
          owner: student
          mode: "0700"

      - name: install Pod network
        become: yes
        become_user: student
        shell: kubectl apply -f calico.yaml
        args:
          chdir: $HOME



      - name: get join command
        become: yes
        become_user: student
        shell: kubeadm token create --print-join-command
        register: join_command_raw

      - name: set join command
        become: yes
        become_user: student
        set_fact:
          join_command: "{{ join_command_raw.stdout_lines[0] }}"


  - hosts: workers
    become: yes
    tasks:

      - name: join cluster
        become_user: root                                            
        become_method: sudo 
        shell: "{{ hostvars['master'].join_command }} "
        args:
          chdir: $HOME
          

